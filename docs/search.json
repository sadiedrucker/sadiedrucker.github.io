[
  {
    "objectID": "WaterInsecurity.html",
    "href": "WaterInsecurity.html",
    "title": "Water Insecurity",
    "section": "",
    "text": "Data curated by Niha Pereira for Tidy Tuesday from U.S. Census Bureau data.\n\n\nCode\nlibrary(tidytuesdayR)\nlibrary(dplyr)\nlibrary(ggplot2)\ntuesdata &lt;- tidytuesdayR::tt_load('2025-01-28')\nwater_insecurity_2022 &lt;- tuesdata$water_insecurity_2022\nwater_insecurity_2023 &lt;- tuesdata$water_insecurity_2023\nwater_insecurity_2022 &lt;- water_insecurity_2022 |&gt; \n  dplyr::mutate(\n    geometry = purrr::map(geometry, \\(geo) {\n      eval(parse(text = geo))\n    } )\n  )\nwater_insecurity_2023 &lt;- water_insecurity_2023 |&gt; \n  dplyr::mutate(\n    geometry = purrr::map(geometry, \\(geo) {\n      eval(parse(text = geo))\n    } )\n  )\n\ntop10_lacking &lt;- water_insecurity_2022 |&gt;\n  mutate(greatest_lacking=percent_lacking_plumbing) |&gt;\n  arrange(desc(greatest_lacking)) |&gt;\n  slice_head(n=10)\n  \nggplot(top10_lacking, aes(x=reorder(name, greatest_lacking), y=greatest_lacking))+\n  geom_col(fill=\"pink\")+\n  coord_flip()+\n  labs(\n    title = \"Top 10 areas lacking plumbing in the U.S. in 2022\",\n    x=\"County Name\", \n    y=\"Percent Lacking Plumbing\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Website created for DS 002R PO.01"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sadie Drucker",
    "section": "",
    "text": "Sadie Drucker is a third-year student at Scripps College.\n\n\nScripps College | Claremont, CA\nB.A in Biology and Data Science | Aug 2023 - Present"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Sadie Drucker",
    "section": "",
    "text": "Scripps College | Claremont, CA\nB.A in Biology and Data Science | Aug 2023 - Present"
  },
  {
    "objectID": "CDCdatasets.html",
    "href": "CDCdatasets.html",
    "title": "CDC Datasets",
    "section": "",
    "text": "Data curated by Jon Harmon for Tidy Tuesday from CDC datasets on Internet Archive.\n\n\nCode\ntuesdata &lt;- tidytuesdayR::tt_load('2025-02-11')\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(janitor)\nlibrary(httr2)\nlibrary(stringr)\n\nindex &lt;- rvest::read_html(\"https://archive.org/download/20250128-cdc-datasets\")\nmeta_urls &lt;- index |&gt; \n  rvest::html_element(\".download-directory-listing\") |&gt; \n  rvest::html_table() |&gt; \n  janitor::clean_names() |&gt; \n  dplyr::filter(stringr::str_ends(x1, \"-meta.csv\")) |&gt; \n  dplyr::mutate(\n    url = paste0(\n      \"https://archive.org/download/20250128-cdc-datasets/\",\n      URLencode(x1)\n    )\n  ) |&gt; \n  dplyr::select(url)\nrm(index)\n\n# As of 2025-02-03, there are 1257 metadata CSVs available. We will load each\n# one and widen it, then stitch them all together. This can take a very long\n# time.\nrequests &lt;- meta_urls$url |&gt;\n  purrr::map(\\(url) {\n    httr2::request(url) |&gt; \n      httr2::req_retry(\n        max_tries = 10,\n        is_transient = \\(resp) {\n          httr2::resp_status(resp) %in% c(429, 500, 503)\n        },\n        # Always wait 10 seconds to retry. It seems to be a general throttle,\n        # but they don't tell us how long they need us to back off.\n        backoff = \\(i) 10\n      )\n  })\n\nresps &lt;- httr2::req_perform_sequential(requests, on_error = \"continue\")\n\nreqs_to_retry &lt;- resps |&gt; \n  httr2::resps_failures() |&gt; \n  purrr::map(\"request\")\n\nresps2 &lt;- httr2::req_perform_sequential(reqs_to_retry)\n\nresps &lt;- c(httr2::resps_successes(resps), httr2::resps_successes(resps2))\n\nextract_cdc_dataset_row &lt;- function(resp) {\n  httr2::resp_body_string(resp) |&gt; \n    stringr::str_trim()\n}\n\ncdc_datasets &lt;- tibble::tibble(\n  dataset_url = purrr::map_chr(resps, c(\"request\", \"url\")),\n  raw = httr2::resps_data(resps, extract_cdc_dataset_row)\n) |&gt;\n  tidyr::separate_longer_delim(raw, delim = \"\\r\\n\") |&gt; \n  dplyr::filter(stringr::str_detect(raw, \",\")) |&gt; \n  tidyr::separate_wider_delim(\n    raw,\n    delim = \",\",\n    names = c(\"field\", \"value\"),\n    too_many = \"merge\",\n    too_few = \"align_start\"\n  ) |&gt; \n  # Remove opening/closing quotes and trailing commas.\n  dplyr::mutate(\n    value = stringr::str_trim(value),\n    value = dplyr::if_else(\n      stringr::str_starts(value, '\"') & stringr::str_ends(value, '\"') &\n        !stringr::str_detect(stringr::str_sub(value, 2, -2), '\"'),\n      stringr::str_sub(value, 2, -2),\n      value\n    ) |&gt; \n      stringr::str_remove(\",\\\\s*$\") |&gt; \n      dplyr::na_if(\"\") |&gt; \n      dplyr::na_if(\"NA\") |&gt;  \n      dplyr::na_if(\"n/a\") |&gt;  \n      dplyr::na_if(\"N/A\") \n  ) |&gt; \n  dplyr::distinct() |&gt; \n  dplyr::filter(!is.na(value)) |&gt; \n  tidyr::pivot_wider(\n    id_cols = c(dataset_url),\n    names_from = field,\n    values_from = value,\n    # Paste the contents of multi-value fields together.\n    values_fn = \\(x) {\n      paste(unique(x), collapse = \"\\n\")\n    }\n  ) |&gt; \n  janitor::clean_names() |&gt; \n  dplyr::mutate(\n    tags = purrr::map2_chr(tags, theme, \\(tags, theme) {\n      if (!is.na(theme)) {\n        paste(tags, theme, sep = \", \")\n      } else {\n        tags\n      }\n    }),\n    language = dplyr::case_match(\n      language,\n      \"English\" ~ \"en-US\",\n      .default = language\n    )\n  ) |&gt; \n  dplyr::mutate(\n    dplyr::across(\n      c(\"public_access_level\", \"update_frequency\"),\n      tolower\n    )\n  ) |&gt; \n  # Manually dropped identified meaningless columns.\n  dplyr::select(\n    -resource_name,\n    -system_of_records,\n    -theme,\n    -is_quality_data\n  )\n\nomb_codes &lt;- readr::read_csv(\"https://resources.data.gov/schemas/dcat-us/v1.1/omb_bureau_codes.csv\") |&gt; \n  janitor::clean_names() |&gt; \n  dplyr::mutate(\n    cgac_code = dplyr::na_if(cgac_code, \"n/a\")\n  )\n\nfpi_codes &lt;- readr::read_csv(\"https://resources.data.gov/schemas/dcat-us/v1.1/FederalProgramInventory_FY13_MachineReadable_091613.csv\") |&gt; \n  janitor::clean_names()\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\ndatasets_by_category &lt;- cdc_datasets |&gt;\n  group_by(category)|&gt;\n  summarize(n_datasets = n()) |&gt;\n  arrange(desc(n_datasets))\n\ntop_categories &lt;- head(datasets_by_category, 10)\n\nggplot(top_categories, aes(x = reorder(category, n_datasets), y = n_datasets)) +\n  geom_col(fill=\"pink\") +\n  coord_flip() +\n  labs(\n    title = \"Top 10 dataset categories\",\n    x = \"Category\",\n    y = \"Number of Datasets\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis plot displays the top ten categories for all datasets contained in the CDC datasets archive."
  },
  {
    "objectID": "NYTHeadlines.html",
    "href": "NYTHeadlines.html",
    "title": "New York Times Headlines",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(RTextTools) \n\nLoading required package: SparseM\n\nlibrary(forcats)\ndata(NYTimes)\nnyt&lt;-as_tibble(NYTimes)\n\nnyt&lt;-nyt |&gt;\n  mutate(Date=as.Date(Date, format = \"%d-%b-%y\"))\n\nnyt_clean &lt;- nyt |&gt;\n  mutate(clean_headline=Title |&gt;\n           str_to_lower()|&gt;\n           str_replace_all(\"[^a-z\\\\s]\", \" \")|&gt;\n           str_squish(),\n         year=year(Date)\n        )\n\nnyt_mentions &lt;- nyt_clean |&gt;\n  mutate(\n    clinton = str_detect(clean_headline, \"(?&lt;![a-z])clinton(?![a-z])\"),\n    bush = str_detect(clean_headline, \"(?&lt;![a-z])bush(?![a-z])\")\n  )\n\nnyt_periods &lt;- nyt_mentions |&gt;\n  mutate(\n    period = case_when(\n      Date &gt;= as.Date(\"1997-01-20\") & Date &lt; as.Date(\"2001-01-20\") ~ \"Clinton Era \n      (01/20/1997 to 01/20/2001)\",\n      Date &gt;= as.Date(\"2001-01-20\") & Date &lt; as.Date(\"2005-01-20\") ~ \"Bush era \n      (01/20/2001 to 01/20/2005)\",\n      TRUE ~ NA_character_\n    )\n  ) |&gt;\n  filter(!is.na(period))\n\nnyt_counts &lt;- nyt_periods |&gt;\n  group_by(period) |&gt;\n  summarise(\n    clinton_mentions = sum(clinton),\n    bush_mentions = sum(bush)\n  )\n\n  \n\nnyt_plot&lt;-nyt_counts|&gt;\n  pivot_longer(cols = c(clinton_mentions, bush_mentions),\n               names_to = \"name\", values_to = \"count\") \n  \n\nggplot(nyt_plot, aes(x = period, y = count, fill = name)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    title = \"NYT Headline Mentions: Clinton vs Bush\",\n    x = \"Presidential Era\", \n    y = \"Number of Mentions\",\n    fill = \"President\"\n  ) +\n  scale_fill_manual(\n    values = c(\"clinton_mentions\" = \"blue\", \"bush_mentions\" = \"red\"),\n    labels = c(\"clinton_mentions\" = \"Clinton mentions\",\n               \"bush_mentions\" = \"Bush mentions\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nnyt_trend &lt;- nyt_mentions %&gt;%\n  filter(Date &gt;= as.Date(\"1997-01-20\") & Date &lt; as.Date(\"2005-01-20\")) %&gt;%\n  mutate(month = floor_date(Date, \"month\")) %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    clinton = sum(clinton),\n    bush    = sum(bush)\n  ) %&gt;%\n  pivot_longer(cols = c(clinton, bush),\n               names_to = \"name\",\n               values_to = \"count\")\n\nggplot(nyt_trend, aes(x = month, y = count, color = name)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"6 months\") + \n  scale_color_manual(\n    values = c(\"clinton\" = \"blue\", \"bush\" = \"red\"),\n    labels = c(\"clinton\" = \"Clinton mentions\",\n               \"bush\" = \"Bush mentions\")) +\n  \n  labs(\n    title = \"Monthly NYT Headline Mentions: Clinton vs Bush\",\n    x = \"Month\",\n    y = \"Number of Mentions\",\n    color = \"President\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=8)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  }
]